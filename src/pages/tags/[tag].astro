---
import MainLayout from "../../layouts/MainLayout.astro";
import DefaultCard from "../../components/DefaultCard.astro";
import { getCollection } from 'astro:content';

// Generate static paths for all tags
export async function getStaticPaths() {
  const posts = await getCollection('posts');
  
  // Try to get drafts, but handle the case when the collection doesn't exist
  let drafts = [];
  if (import.meta.env.DEV) {
    try {
      drafts = await getCollection('drafts');
    } catch (error) {
      console.warn('No drafts collection found or it is empty');
    }
  }
  
  const allPosts = [...posts, ...drafts];
  
  // Get all unique tags
  const allTags = allPosts.flatMap(post => post.data.tags || []);
  const uniqueTags = [...new Set(allTags)];
  
  // Generate a path for each tag
  return uniqueTags.map(tag => {
    const filteredPosts = allPosts.filter(post => 
      post.data.tags && post.data.tags.includes(tag)
    );
    
    return {
      params: { tag },
      props: { posts: filteredPosts }
    };
  });
}

// Get the tag from params and filtered posts from props
const { tag } = Astro.params;
const { posts } = Astro.props;

// Sort posts by date
const sortedPosts = posts.sort((a, b) => 
  b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Get custom card components for posts that have them
const customCardComponents = import.meta.glob('../../components/custom-cards/*.{jsx,tsx,astro}');
---

<MainLayout 
  title={`Ideas tagged with ${tag}`}
  description={`Browse all ideas related to ${tag}`}
>
  <div class="container mx-auto px-4">
    <header class="border-b border-white/10 pb-8 mb-12">
      <h1 class="text-4xl font-bold mb-4 text-center font-['Space_Grotesk']">
        Ideas tagged with <span class="text-[#5b34da]">{tag}</span>
      </h1>
      <p class="text-center text-white/70 mb-6">Found {sortedPosts.length} idea{sortedPosts.length !== 1 ? 's' : ''}</p>
      <div class="flex justify-center">
        <a href="/tags" class="px-4 py-2 bg-[#2a2a2a] text-white/80 text-sm rounded-md border border-white/10 
          hover:bg-[#3a3a3a] hover:border-[#5b34da]/50 transition-all">
          ‚Üê Back to all tags
        </a>
      </div>
    </header>
    
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 auto-rows-auto">
      {sortedPosts.map(post => {
        const { data, slug, collection } = post;
        const isDraft = data.draft || collection === 'drafts';
        
        // Generate URL
        const url = `/${collection}/${slug}`;
        
        // Custom cards are currently disabled until framework integrations are set up
        if (false) {
          // This code is disabled to prevent errors with custom components
          // We'll need to add the proper framework integration first
        } else {
          // Otherwise use the default card component
          return (
            <DefaultCard
              title={data.title}
              description={data.description}
              image={data.image}
              url={url}
              tags={data.tags}
              isDraft={isDraft}
            />
          );
        }
      })}
    </div>
    
    <div class="text-center mt-12 pt-8 border-t border-white/10">
      <a href="/tags" class="inline-block px-6 py-3 bg-[#5b34da] text-white rounded-md hover:bg-[#4a2ab8] transition-colors">
        View All Tags
      </a>
    </div>
  </div>
</MainLayout>